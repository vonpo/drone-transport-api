service: drones-api
frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-central-1
  stage: dev
  environment:
      DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}

functions:
  droneCreate:
    handler: api/drone-create/create.create
    events:
      - http:
          path: drones
          method: post
          cors: true
  droneList:
    handler: api/drone-list/list.list
    events:
      - http:
          path: drones
          method: get
          cors: true
  droneGet:
    handler: api/drone-get-by-id/get.get
    events:
      - http:
          path: drones/{id}
          method: get
          cors: true
  bookingCreate:
    handler: api/booking-create/create.create
    events:
      - http:
          path: drones/booking
          method: post
          cors: true
  bookingDelete:
    handler: api/booking-delete/delete.delete
    events:
      - http:
          path: drones/{id}/booking
          method: delete
          cors: true
  bookingUpdate:
    handler: api/booking-update/update.update
    events:
      - http:
          path: drones/{id}/booking
          method: put
          cors: true

resources:
  Resources:
    DronesDynamoTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
